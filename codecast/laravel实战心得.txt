2019.1.21
使用sendcloud实现用户登录的邮件验证功能
//https://github.com/NauxLiu/Laravel-SendCloud

git status
git init
git add .
git commit -m[]
git push
//git命令大全
//https://www.cnblogs.com/allanli/p/git_commands.html

php artisan make：Auth
php artisna make:controller EmailController


//php artisan 常用命令
https://blog.csdn.net/fationyyk/article/details/51504453

str_random()随机字符串
redirect() 重定向

使用laracasts/flash

php artisan make:model Question -m

-------------------2019年1月24日------------------------------------
遇到了各种各样的问题，虽然还有小部分没有解决
tinker 调试 Factory locate不到方法
解决之后又出现问题了PHP error


不过也学到了很多
DI也称IoC控制反转 DI依赖注入
通过将类作为参数类型
可以减小耦合度 也就是吧参数类型也写成类 让这个类来对这个传入的参数进行操作

select2 话题选择插件的使用

laravel框架的css 与 js
通过mix.version保持更新

webpack + npm编译合并
npm nodejs的生态工具 类似composer
npm install
npm run dev
nmp run watch

------------------------2019年1月24日 22点54分-------------------------

no time  to summary

Q：
想实现vue组件化失败
vue大失败，
需要从头再来


get：
1.resipotoryMode

2.问题feed

3.toggle（）函数 非常好用 可以根据数据库里面情况来实现删除添加

4.对MVC更深的理解了


------------------------2019年1月28日 12点25分-------------------------

no time  to summary 周末一定做一次总结 不然白学了感觉

Q：
today no q


get：
1.resipotoryMode

2.vue组件化实现follow成功 重新温习了调试404 500 路由问题代码问题

3.toggle（）函数 非常好用 可以根据数据库里面情况来实现删除添加 再次使用了toggle

4.controller已经非常熟练
------------------------2019/2/3 19:11--------------------
1,api认证的写法Route：：get()  Route::post()
2,使用了自定义信道，channels定义文件夹 toSend()函数
3，使用了notification功能 学习了tomail和todatabase
4，温习一遍之前的笔记


------------------23点06分 2019年2月4日-----------------


年夜饭喝了3小碗葡萄酒 头脑还是清晰的
1.重构了邮件功能的代码 通过Mailer作为基类来派生出UserMailer等类
2.还有些许逻辑上的错误，没有修复好
3.初步认定是逻辑上的问题


--------------------------23点42分 2019年2月5日--------
今晚两盅葡萄酒 
二月十四号的招聘会是确实可以去的
今天看了文档记录一下：
Laravel 自带几个预构建的认证控制器，它们被放置在 App\Http\Controllers\Auth 命名空间内。 RegisterController 处理新用户注册， LoginController 处理用户认证， ForgotPasswordController 处理用于重置密码的邮件链接，而 ResetPasswordController 包含重置密码的逻辑。这些控制器都使用 trait 来引入所必要的方法。对于大多数应用而言，你根本不需要修改这些控制器。

------------------------20点58分 2019年2月8日---------------

q:自定义channel实现失败
q:Sendclass无效
可能需要通知优先队列来实现，是laravel框架版本的问题

get：
1，Model Dialog 通过 v-model实现数据的双向绑定
这是个简洁好用的Dialog框
2，使用了多态关联，是laravel框架的Elqouent下的一种关联模式 使用在评论类型和评论者id  评论类型会关联到两个表一个是question 问题表 另一个是会关联到Answer表 还有评论人id 是关联到User表当中
3，使用了repository重构了 大部分可以使用依赖注入的地方  repository可以让人更舒服 强迫症表示很爽
4.准备使用helper function 将所有的guard替换成自定义的函数 大大优化了route 管理起来也更舒服 


-----------------------23点15分 2019年2月12日-------------
今天居然有15k步数
烟花真是绚烂而短暂
q:在上传图片的时候验证csrf失败，csrftoken引用不正常
q:  界面没有修改
get：看源码学习了csrf x-csrf xsrf 可以使用csrf 也可以通过修改中间件middleware中的Verifycsrf来过滤网址
get：make request 让职责更加分明 通过make出来的request 进行依赖注入
get:使用 laravel 的 eloquent mutator （casts） 存储一下不是那么重要的数据让数据库不需要那么多的字段




